# ~/.zprofile
# Note: this file is loaded *only once* at login time, and sourced before .zshrc
# Best practise is to set up the environment here -- including exporting
# environment variables
#
# Homebrew recommends setting PATH variable here as macOS sets the PATH before
# .zprofile is loaded
#
# Authors:
#   Ian Jukes

# Ensure .zprofile is only sourced once per shell
[ -n "$ZPROFILE_ALREADY_SOURCED" ] && return
export ZPROFILE_ALREADY_SOURCED=1

# Homebrew
if [[ `uname -m` == 'arm64' ]]; then
  # If Apple Silicon:
  export HOMEBREW_PREFIX="/opt/homebrew"
  export HOMEBREW_REPOSITORY="$HOMEBREW_PREFIX"
else
  # If Intel:
  export HOMEBREW_PREFIX="/usr/local"
  export HOMEBREW_REPOSITORY="$HOMEBREW_PREFIX/Homebrew"
fi
export HOMEBREW_CELLAR="$HOMEBREW_PREFIX/Cellar"
export HOMEBREW_NO_ENV_HINTS=1
export HOMEBREW_NO_ANALYTICS=1

export PATH="$HOMEBREW_PREFIX/bin:$HOMEBREW_PREFIX/sbin${PATH:+:$PATH}"
export MANPATH="$HOMEBREW_PREFIX/share/man${MANPATH:+:$MANPATH}"
export INFOPATH="$HOMEBREW_PREFIX/share/info:${INFOPATH:-}"

# 1Password
OP_DIR="$XDG_CACHE_HOME/1password"
OP_SCK="$HOME/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock"
[ ! -d $OP_DIR ] && mkdir -p $OP_DIR
if [ -e "$OP_SCK" ] && [ ! -L $OP_DIR/agent.sock ]; then
  ln -s "$OP_SCK" $OP_DIR/agent.sock
  export SSH_AUTH_SOCK=$OP_DIR/agent.sock
fi

# AWS
export AWS_PROFILE="noomedia"
export AWS_REGION="eu-west-2"
export AWS_DEFAULT_REGION="eu-west-2"
export AWS_DEFAULT_OUTPUT="json"

# Azure
export AZURE_CONFIG_DIR="$XDG_CONFIG_HOME/azure"

# curl
export PATH="${PATH:+$PATH:}$HOMEBREW_PREFIX/opt/curl/bin"

# GnuPG
export GNUPGHOME="$XDG_CONFIG_HOME/gnupg"

# Go
export GOROOT="$HOMEBREW_PREFIX/opt/go"

# Guile
export GUILE_LOAD_PATH="$HOMEBREW_PREFIX/share/guile/site/3.0"
export GUILE_LOAD_COMPILED_PATH="$HOMEBREW_PREFIX/lib/guile/3.0/site-ccache"
export GUILE_SYSTEM_EXTENSIONS_PATH="$HOMEBREW_PREFIX/lib/guile/3.0/extensions"
export GUILE_TLS_CERTIFICATE_DIRECTORY="$HOMEBREW_PREFIX/etc/gnutls/"

# Java
export JAVA_HOME="$(/usr/libexec/java_home)"
export JENV_ROOT="$XDG_DATA_HOME/jenv"

# Less
export LESSHISTFILE="$XDG_CACHE_HOME/lesshst"
export LESS="-XFR"

# Maven
export M2_HOME="$HOMEBREW_PREFIX/opt/maven/libexec"
export M2="$M2_HOME/bin"

# Minikube
export MINIKUBE_HOME="$XDG_STATE_HOME/minikube"

# MySQL client
export PATH="${PATH:+$PATH:}$HOMEBREW_PREFIX/opt/mysql-client/bin"

# Node.js
export NVM_DIR="$XDG_DATA_HOME/nvm"
export NVM_HOMEBREW="$HOMEBREW_PREFIX/nvm"

# NPM
export NPM_CONFIG_CACHE="$XDG_CACHE_HOME/npm"

# OpenSSL
export PATH="${PATH:+$PATH:}$HOMEBREW_PREFIX/opt/openssl/bin"

# Python
export PYENV_VIRTUALENV_DISABLE_PROMPT=1
export PYENV_ROOT="$XDG_DATA_HOME/pyenv"
export PYTHONSTARTUP="$XDG_CONFIG_HOME/python/pythonrc.py"
export PYTHON_HISTORY="$XDG_CACHE_HOME/python_history"
export IPYTHONDIR="$XDG_CONFIG_HOME/ipython"
export JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME/jupyter"

# Ruby
export PATH="${PATH:+$PATH:}$HOMEBREW_PREFIX/opt/ruby/bin"

# Rust
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"
export CARGO_HOME="$XDG_DATA_HOME/cargo"

# Tcl/Tk (for Python)
export TK_SILENCE_DEPRECATION=1
export PATH="${PATH:+$PATH:}$HOMEBREW_PREFIX/opt/tcl-tk/bin"

# Terraform
export TF_CLI_CONFIG_FILE="$XDG_CONFIG_HOME/terraform/terraformrc"

# User scripts path
export PATH="${PATH:+$PATH:}$XDG_DATA_HOME/../bin"

# Vim
export VIMINIT="source $XDG_CONFIG_HOME/vim/vimrc"

# Visual Studio Code
export PATH="${PATH:+$PATH:}/Applications/Visual Studio Code.app/Content/Resources/app/bin"
